module Timer_Renderer (
    input  [9:0] h_count,
    input  [9:0] v_count,
    input        display_area,
    input  [2:0] p1_health, p2_health,
    input  [2:0] p1_shield, p2_shield,
    output [7:0] r, g, b,
    output       draw
);

    localparam 
		DIGIT_WIDTH  = 8'd24,
		DIGIT_HEIGHT = 8'd32,
		DIGIT_SPACING = 8'd8,

		SCREEN_WIDTH = 10'd640,

		DIGIT_TOP    = DIGIT_HEIGHT >> 1'b1; // top spacing measured from center???

    // get left and right digits. If time_elapsed exceeds 99 then stay at 99
    wire [3:0] left_digit  = time_seconds < 7'd100 ?  time_seconds / 4'd10: 4'd9;
    wire [3:0] right_digit = time_seconds < 7'd100 ?  time_seconds % 4'd10: 4'd9;

    localparam total_width = (2 * DIGIT_WIDTH) + DIGIT_SPACING;
    localparam digit_left_x = (SCREEN_WIDTH - total_width) / 2;
    localparam digit_right_x = digit_left_x + DIGIT_WIDTH + DIGIT_SPACING;


// Character ROM: 4 shapes 64x64 font
    reg [31:0] shape_rom [0:3][0:31];

    integer i;
    integer k;
    initial begin
        // reset rom first
        for (i = 0; i < 4; i = i + 1) begin
            for (k = 0, k<32, k = k + 1) begin
                shape[i][k]  = 32'b0;
            end 
            // shape_rom[i][ 0] = 32'b0; shape_rom[i][ 1] = 32'b0; shape_rom[i][ 2] = 32'b0; shape_rom[i][ 3] = 32'b0;
            // shape_rom[i][ 4] = 32'b0; shape_rom[i][ 5] = 32'b0; shape_rom[i][ 6] = 32'b0; shape_rom[i][ 7] = 32'b0;
            // shape_rom[i][ 8] = 32'b0; shape_rom[i][ 9] = 32'b0; shape_rom[i][10] = 32'b0; shape_rom[i][11] = 32'b0;
            // shape_rom[i][12] = 32'b0; shape_rom[i][13] = 32'b0; shape_rom[i][14] = 32'b0; shape_rom[i][15] = 32'b0;
            // shape_rom[i][16] = 32'b0; shape_rom[i][17] = 32'b0; shape_rom[i][18] = 32'b0; shape_rom[i][19] = 32'b0;
            // shape_rom[i][20] = 32'b0; shape_rom[i][21] = 32'b0; shape_rom[i][22] = 32'b0; shape_rom[i][23] = 32'b0;
            // shape_rom[i][24] = 32'b0; shape_rom[i][25] = 32'b0; shape_rom[i][26] = 32'b0; shape_rom[i][27] = 32'b0;
            // shape_rom[i][28] = 32'b0; shape_rom[i][29] = 32'b0; shape_rom[i][30] = 32'b0; shape_rom[i][31] = 32'b0;
        end
        // define a map of the shapes in rom
        // heart
        shape_rom[0][0]  = 32'b00000000000000000000000000000000;
        shape_rom[0][1]  = 32'b00000000000000000000000000000000;
        shape_rom[0][2]  = 32'b00000000000000000000000000000000;
        shape_rom[0][3]  = 32'b00000000000000000000000000000000;
        shape_rom[0][4]  = 32'b00000000000000000000000000000000;
        shape_rom[0][5]  = 32'b00000000000000000000000000000000;
        shape_rom[0][6]  = 32'b00000000001111000011110000000000;
        shape_rom[0][7]  = 32'b00000000011111111111111000000000;
        shape_rom[0][8]  = 32'b00000000111111111111111100000000;
        shape_rom[0][9]  = 32'b00000001111111111111111110000000;
        shape_rom[0][10] = 32'b00000001111111111111111110000000;
        shape_rom[0][11] = 32'b00000001111111111111111110000000;
        shape_rom[0][12] = 32'b00000001111111111111111110000000;
        shape_rom[0][13] = 32'b00000001111111111111111110000000;
        shape_rom[0][14] = 32'b00000001111111111111111110000000;
        shape_rom[0][15] = 32'b00000000111111111111111100000000;
        shape_rom[0][16] = 32'b00000000111111111111111100000000;
        shape_rom[0][17] = 32'b00000000011111111111111000000000;
        shape_rom[0][18] = 32'b00000000001111111111110000000000;
        shape_rom[0][19] = 32'b00000000000111111111100000000000;
        shape_rom[0][20] = 32'b00000000000011111111000000000000;
        shape_rom[0][21] = 32'b00000000000001111110000000000000;
        shape_rom[0][22] = 32'b00000000000000111100000000000000;
        shape_rom[0][23] = 32'b00000000000000011000000000000000;
        shape_rom[0][24] = 32'b00000000000000000000000000000000;
        shape_rom[0][25] = 32'b00000000000000000000000000000000;
        shape_rom[0][26] = 32'b00000000000000000000000000000000;
        shape_rom[0][27] = 32'b00000000000000000000000000000000;
        shape_rom[0][28] = 32'b00000000000000000000000000000000;
        shape_rom[0][29] = 32'b00000000000000000000000000000000;
        shape_rom[0][30] = 32'b00000000000000000000000000000000;
        shape_rom[0][31] = 32'b00000000000000000000000000000000;
        
        // heart break
        shape_rom[1][0]  = 32'b00000000000000000000000000000000;
        shape_rom[1][1]  = 32'b00000000000000000000000000000000;
        shape_rom[1][2]  = 32'b00000000000000000000000000000000;
        shape_rom[1][3]  = 32'b00000000000000000000000000000000;
        shape_rom[1][4]  = 32'b00000000000000000000000000000000;
        shape_rom[1][5]  = 32'b00000000000000000000000000000000;
        shape_rom[1][6]  = 32'b00000000001111000011110000000000;
        shape_rom[1][7]  = 32'b00000000011111110111111100000000;
        shape_rom[1][8]  = 32'b00000000111111100011111110000000;
        shape_rom[1][9]  = 32'b00000001111111110011111111000000;
        shape_rom[1][10] = 32'b00000001111111111001111111000000;
        shape_rom[1][11] = 32'b00000001111111111100111111000000;
        shape_rom[1][12] = 32'b00000001111111111100111111000000;
        shape_rom[1][13] = 32'b00000001111111111101111111000000;
        shape_rom[1][14] = 32'b00000001111111110011111111000000;
        shape_rom[1][15] = 32'b00000000111111100111111110000000;
        shape_rom[1][16] = 32'b00000000111111001111111110000000;
        shape_rom[1][17] = 32'b00000000011110011111111100000000;
        shape_rom[1][18] = 32'b00000000001111001111111000000000;
        shape_rom[1][19] = 32'b00000000000111110011110000000000;
        shape_rom[1][20] = 32'b00000000000011111001110000000000;
        shape_rom[1][21] = 32'b00000000000001111100000000000000;
        shape_rom[1][22] = 32'b00000000000000111110000000000000;
        shape_rom[1][23] = 32'b00000000000000011100000000000000;
        shape_rom[1][24] = 32'b00000000000000000000000000000000;
        shape_rom[1][25] = 32'b00000000000000000000000000000000;
        shape_rom[1][26] = 32'b00000000000000000000000000000000;
        shape_rom[1][27] = 32'b00000000000000000000000000000000;
        shape_rom[1][28] = 32'b00000000000000000000000000000000;
        shape_rom[1][29] = 32'b00000000000000000000000000000000;
        shape_rom[1][30] = 32'b00000000000000000000000000000000;
        shape_rom[1][31] = 32'b00000000000000000000000000000000;

        // shield 
        shape_rom[2][0]   = 32'b00000000000000000000000000000000;
        shape_rom[2][1]   = 32'b00000000000000000000000000000000;
        shape_rom[2][2]   = 32'b00000000000000000000000000000000;
        shape_rom[2][3]   = 32'b00000000000000000000000000000000;
        shape_rom[2][4]   = 32'b00000000000000000000000000000000;
        shape_rom[2][5]   = 32'b00000000000000000000000000000000;
        shape_rom[2][6]   = 32'b00000000000000000000000000000000;
        shape_rom[2][7]   = 32'b00000000000000000000000000000000;
        shape_rom[2][8]   = 32'b00000000000000111100000000000000;
        shape_rom[2][9]   = 32'b00000011100011111111000111000000;
        shape_rom[2][10]  = 32'b00000011111111111111111111000000;
        shape_rom[2][11]  = 32'b00000011111111111111111111000000;
        shape_rom[2][12]  = 32'b00000011111111111111111111000000;
        shape_rom[2][13]  = 32'b00000011111111111111111111000000;
        shape_rom[2][14]  = 32'b00000011111111111111111111000000;
        shape_rom[2][15]  = 32'b00000011111111111111111111000000;
        shape_rom[2][16]  = 32'b00000001111111111111111110000000;
        shape_rom[2][17]  = 32'b00000001111111111111111110000000;
        shape_rom[2][18]  = 32'b00000001111111111111111110000000;
        shape_rom[2][19]  = 32'b00000001111111111111111110000000;
        shape_rom[2][20]  = 32'b00000001111111111111111110000000;
        shape_rom[2][21]  = 32'b00000000111111111111111100000000;
        shape_rom[2][22]  = 32'b00000000111111111111111100000000;
        shape_rom[2][23]  = 32'b00000000011111111111111000000000;
        shape_rom[2][24]  = 32'b00000000001111111111110000000000;
        shape_rom[2][25]  = 32'b00000000000111111111100000000000;
        shape_rom[2][26]  = 32'b00000000000011111111000000000000;
        shape_rom[2][27]  = 32'b00000000000000111100000000000000;
        shape_rom[2][28]  = 32'b00000000000000000000000000000000;
        shape_rom[2][29]  = 32'b00000000000000000000000000000000;
        shape_rom[2][30]  = 32'b00000000000000000000000000000000;
        shape_rom[2][31]  = 32'b00000000000000000000000000000000;
        
        // Broken shield
        shape_rom[3][0]   = 32'b00000000000000000000000000000000;
        shape_rom[3][1]   = 32'b00000000000000000000000000000000;
        shape_rom[3][2]   = 32'b00000000000000000000000000000000;
        shape_rom[3][3]   = 32'b00000000000000000000000000000000;
        shape_rom[3][4]   = 32'b00000000000000000000000000000000;
        shape_rom[3][5]   = 32'b00000000000000000000000000000000;
        shape_rom[3][6]   = 32'b00000000000000000000000000000000;
        shape_rom[3][7]   = 32'b00000000000000000000000000000000;
        shape_rom[3][8]   = 32'b00000000000000111100000000000000;
        shape_rom[3][9]   = 32'b00000011100011111111000011000000;
        shape_rom[3][10]  = 32'b00000011111111111111000111000000;
        shape_rom[3][11]  = 32'b00000011111111111110001111000000;
        shape_rom[3][12]  = 32'b00000011111111111110011111000000;
        shape_rom[3][13]  = 32'b00000011111111111100111111000000;
        shape_rom[3][14]  = 32'b00000011111111111101111111000000;
        shape_rom[3][15]  = 32'b00000011111111111011111111000000;
        shape_rom[3][16]  = 32'b00000001111111110111111110000000;
        shape_rom[3][17]  = 32'b00000001111111101111111110000000;
        shape_rom[3][18]  = 32'b00000001111111100111111110000000;
        shape_rom[3][19]  = 32'b00000001111111110011111110000000;
        shape_rom[3][20]  = 32'b00000001111111111000111100000000;
        shape_rom[3][21]  = 32'b00000000111111111100011100000000;
        shape_rom[3][22]  = 32'b00000000111111111000111100000000;
        shape_rom[3][23]  = 32'b00000000011111110011111000000000;
        shape_rom[3][24]  = 32'b00000000001111100111110000000000;
        shape_rom[3][25]  = 32'b00000000000111001111100000000000;
        shape_rom[3][26]  = 32'b00000000000010111100000000000000;
        shape_rom[3][27]  = 32'b00000000000000111100000000000000;
        shape_rom[3][28]  = 32'b00000000000000000000000000000000;
        shape_rom[3][29]  = 32'b00000000000000000000000000000000;
        shape_rom[3][30]  = 32'b00000000000000000000000000000000;
        shape_rom[3][31]  = 32'b00000000000000000000000000000000;       
    end


    wire in_left_digit = (h_count >= digit_left_x) && (h_count < digit_left_x + DIGIT_WIDTH) &&
                         (v_count >= DIGIT_TOP) && (v_count < DIGIT_TOP + DIGIT_HEIGHT);

    wire in_right_digit = (h_count >= digit_right_x) && (h_count < digit_right_x + DIGIT_WIDTH) &&
                          (v_count >= DIGIT_TOP) && (v_count < DIGIT_TOP + DIGIT_HEIGHT);

    wire [4:0] row = v_count - DIGIT_TOP;
    wire [4:0] col_left = h_count - digit_left_x;
    wire [4:0] col_right = h_count - digit_right_x;

    wire pixel_on_left = in_left_digit && row < 32 ? shape_rom[left_digit][row][23 - col_left] : 1'b0;
    wire pixel_on_right = in_right_digit && row < 32 ? shape_rom[right_digit][row][23 - col_right] : 1'b0;


    assign draw = (pixel_on_left | pixel_on_right) && display_area;

    assign r = (pixel_on_left | pixel_on_right) ? 8'hFF : 8'h10;
    assign g = (pixel_on_left | pixel_on_right) ? 8'hFF : 8'h10;
    assign b = (pixel_on_left | pixel_on_right) ? 8'hFF : 8'h10;

endmodule


