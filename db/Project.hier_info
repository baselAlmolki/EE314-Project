|Project
CLOCK2_50 => ~NO_FANOUT~
CLOCK3_50 => ~NO_FANOUT~
CLOCK4_50 => ~NO_FANOUT~
CLOCK_50 => CLOCK_50.IN2
HEX0[0] << hexto7seg:hexy.hexn
HEX0[1] << hexto7seg:hexy.hexn
HEX0[2] << hexto7seg:hexy.hexn
HEX0[3] << hexto7seg:hexy.hexn
HEX0[4] << hexto7seg:hexy.hexn
HEX0[5] << hexto7seg:hexy.hexn
HEX0[6] << hexto7seg:hexy.hexn
HEX1[0] << hexto7seg:hexz.hexn
HEX1[1] << hexto7seg:hexz.hexn
HEX1[2] << hexto7seg:hexz.hexn
HEX1[3] << hexto7seg:hexz.hexn
HEX1[4] << hexto7seg:hexz.hexn
HEX1[5] << hexto7seg:hexz.hexn
HEX1[6] << hexto7seg:hexz.hexn
HEX2[0] << shieldto7seg:sfsdfew.seg2
HEX2[1] << shieldto7seg:sfsdfew.seg2
HEX2[2] << shieldto7seg:sfsdfew.seg2
HEX2[3] << shieldto7seg:sfsdfew.seg2
HEX2[4] << shieldto7seg:sfsdfew.seg2
HEX2[5] << shieldto7seg:sfsdfew.seg2
HEX2[6] << shieldto7seg:sfsdfew.seg2
HEX3[0] << shieldto7seg:sfsdfew.seg1
HEX3[1] << shieldto7seg:sfsdfew.seg1
HEX3[2] << shieldto7seg:sfsdfew.seg1
HEX3[3] << shieldto7seg:sfsdfew.seg1
HEX3[4] << shieldto7seg:sfsdfew.seg1
HEX3[5] << shieldto7seg:sfsdfew.seg1
HEX3[6] << shieldto7seg:sfsdfew.seg1
HEX4[0] << <GND>
HEX4[1] << <GND>
HEX4[2] << <GND>
HEX4[3] << <GND>
HEX4[4] << <GND>
HEX4[5] << <GND>
HEX4[6] << <GND>
HEX5[0] << <GND>
HEX5[1] << <GND>
HEX5[2] << <GND>
HEX5[3] << <GND>
HEX5[4] << <GND>
HEX5[5] << <GND>
HEX5[6] << <GND>
KEY[0] => _.IN1
KEY[0] => _.IN1
KEY[1] => _.IN1
KEY[1] => _.IN1
KEY[2] => _.IN1
KEY[3] => _.IN1
KEY[3] => _.IN1
LEDR[0] << Statuses:status_bars.p2_current_health
LEDR[1] << Statuses:status_bars.p2_current_health
LEDR[2] << Statuses:status_bars.p2_current_health
LEDR[3] << <GND>
LEDR[4] << <GND>
LEDR[5] << Statuses:status_bars.p1_current_health
LEDR[6] << Statuses:status_bars.p1_current_health
LEDR[7] << Statuses:status_bars.p1_current_health
LEDR[8] << <GND>
LEDR[9] << <GND>
SW[0] => ~NO_FANOUT~
SW[1] => SW[1].IN2
SW[2] => ~NO_FANOUT~
SW[3] => SW[3].IN1
SW[4] => SW[4].IN1
SW[5] => SW[5].IN1
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
SW[9] => reset_button.IN3
VGA_BLANK_N << <VCC>
VGA_B[0] << Vga_Display:vga_display_inst.b
VGA_B[1] << Vga_Display:vga_display_inst.b
VGA_B[2] << Vga_Display:vga_display_inst.b
VGA_B[3] << Vga_Display:vga_display_inst.b
VGA_B[4] << Vga_Display:vga_display_inst.b
VGA_B[5] << Vga_Display:vga_display_inst.b
VGA_B[6] << Vga_Display:vga_display_inst.b
VGA_B[7] << Vga_Display:vga_display_inst.b
VGA_CLK << CLOCK_50.DB_MAX_OUTPUT_PORT_TYPE
VGA_G[0] << Vga_Display:vga_display_inst.g
VGA_G[1] << Vga_Display:vga_display_inst.g
VGA_G[2] << Vga_Display:vga_display_inst.g
VGA_G[3] << Vga_Display:vga_display_inst.g
VGA_G[4] << Vga_Display:vga_display_inst.g
VGA_G[5] << Vga_Display:vga_display_inst.g
VGA_G[6] << Vga_Display:vga_display_inst.g
VGA_G[7] << Vga_Display:vga_display_inst.g
VGA_HS << Vga_Display:vga_display_inst.hsync
VGA_R[0] << Vga_Display:vga_display_inst.r
VGA_R[1] << Vga_Display:vga_display_inst.r
VGA_R[2] << Vga_Display:vga_display_inst.r
VGA_R[3] << Vga_Display:vga_display_inst.r
VGA_R[4] << Vga_Display:vga_display_inst.r
VGA_R[5] << Vga_Display:vga_display_inst.r
VGA_R[6] << Vga_Display:vga_display_inst.r
VGA_R[7] << Vga_Display:vga_display_inst.r
VGA_SYNC_N << <GND>
VGA_VS << Vga_Display:vga_display_inst.vsync


|Project|Clock_Divider:clk_div_inst
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => clk_out~reg0.CLK
clk_out <= clk_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Project|GameplayControllerP1:player1
clk_60Hz => logic_clk.DATAB
key_clk => logic_clk.DATAA
switch => logic_clk.OUTPUTSELECT
reset => player_pos_x[0]~reg0.ACLR
reset => player_pos_x[1]~reg0.PRESET
reset => player_pos_x[2]~reg0.ACLR
reset => player_pos_x[3]~reg0.PRESET
reset => player_pos_x[4]~reg0.ACLR
reset => player_pos_x[5]~reg0.ACLR
reset => player_pos_x[6]~reg0.ACLR
reset => player_pos_x[7]~reg0.ACLR
reset => player_pos_x[8]~reg0.ACLR
reset => player_pos_x[9]~reg0.ACLR
reset => frame_counter[0].ACLR
reset => frame_counter[1].ACLR
reset => frame_counter[2].ACLR
reset => frame_counter[3].ACLR
reset => frame_counter[4].ACLR
reset => player_state[0]~reg0.ACLR
reset => player_state[1]~reg0.ACLR
reset => player_state[2]~reg0.ACLR
reset => player_state[3]~reg0.ACLR
in_left => always1.IN0
in_left => always1.IN1
in_left => always1.IN0
in_right => always1.IN1
in_right => always1.IN1
in_right => always1.IN1
attack => always1.IN1
attack => always1.IN1
player2_pos_x[0] => player2_pos_x[0].IN1
player2_pos_x[1] => player2_pos_x[1].IN1
player2_pos_x[2] => player2_pos_x[2].IN1
player2_pos_x[3] => player2_pos_x[3].IN1
player2_pos_x[4] => player2_pos_x[4].IN1
player2_pos_x[5] => player2_pos_x[5].IN1
player2_pos_x[6] => player2_pos_x[6].IN1
player2_pos_x[7] => player2_pos_x[7].IN1
player2_pos_x[8] => player2_pos_x[8].IN1
player2_pos_x[9] => player2_pos_x[9].IN1
player2_state[0] => player2_state[0].IN1
player2_state[1] => player2_state[1].IN1
player2_state[2] => player2_state[2].IN1
player2_state[3] => player2_state[3].IN1
screen_left_bound[0] => LessThan2.IN10
screen_left_bound[1] => Add6.IN18
screen_left_bound[2] => Add6.IN17
screen_left_bound[3] => Add6.IN16
screen_left_bound[4] => Add6.IN15
screen_left_bound[5] => Add6.IN14
screen_left_bound[6] => Add6.IN13
screen_left_bound[7] => Add6.IN12
screen_left_bound[8] => Add6.IN11
screen_left_bound[9] => Add6.IN10
screen_right_bound[0] => Add2.IN20
screen_right_bound[1] => Add2.IN19
screen_right_bound[2] => Add2.IN18
screen_right_bound[3] => Add2.IN17
screen_right_bound[4] => Add2.IN16
screen_right_bound[5] => Add2.IN15
screen_right_bound[6] => Add1.IN8
screen_right_bound[7] => Add1.IN7
screen_right_bound[8] => Add1.IN6
screen_right_bound[9] => Add1.IN5
player_pos_x[0] <= player_pos_x[0].DB_MAX_OUTPUT_PORT_TYPE
player_pos_x[1] <= player_pos_x[1].DB_MAX_OUTPUT_PORT_TYPE
player_pos_x[2] <= player_pos_x[2].DB_MAX_OUTPUT_PORT_TYPE
player_pos_x[3] <= player_pos_x[3].DB_MAX_OUTPUT_PORT_TYPE
player_pos_x[4] <= player_pos_x[4].DB_MAX_OUTPUT_PORT_TYPE
player_pos_x[5] <= player_pos_x[5].DB_MAX_OUTPUT_PORT_TYPE
player_pos_x[6] <= player_pos_x[6].DB_MAX_OUTPUT_PORT_TYPE
player_pos_x[7] <= player_pos_x[7].DB_MAX_OUTPUT_PORT_TYPE
player_pos_x[8] <= player_pos_x[8].DB_MAX_OUTPUT_PORT_TYPE
player_pos_x[9] <= player_pos_x[9].DB_MAX_OUTPUT_PORT_TYPE
player_state[0] <= player_state[0].DB_MAX_OUTPUT_PORT_TYPE
player_state[1] <= player_state[1].DB_MAX_OUTPUT_PORT_TYPE
player_state[2] <= player_state[2].DB_MAX_OUTPUT_PORT_TYPE
player_state[3] <= player_state[3].DB_MAX_OUTPUT_PORT_TYPE
is_directional_attack <= Equal3.DB_MAX_OUTPUT_PORT_TYPE
move_flag <= move_flag.DB_MAX_OUTPUT_PORT_TYPE
attack_flag <= Equal2.DB_MAX_OUTPUT_PORT_TYPE
stunmode[0] <= HitDetection_updated:hit_detec.p1_stunmode
stunmode[1] <= HitDetection_updated:hit_detec.p1_stunmode


|Project|GameplayControllerP1:player1|HitDetection_updated:hit_detec
x1[0] => p1Hrtbox[0].DATAA
x1[0] => Add1.IN16
x1[1] => p1Hrtbox[1].DATAA
x1[1] => Add1.IN15
x1[2] => p1Hrtbox[2].DATAA
x1[2] => Add1.IN14
x1[3] => p1Hrtbox[3].DATAA
x1[3] => Add1.IN13
x1[4] => p1Hrtbox[4].DATAA
x1[4] => Add1.IN12
x1[5] => p1Hrtbox[5].DATAA
x1[5] => Add1.IN11
x1[6] => Add0.IN8
x1[7] => Add0.IN7
x1[8] => Add0.IN6
x1[9] => Add0.IN5
x2[0] => p2Hrtbox[0].DATAA
x2[0] => Add2.IN20
x2[1] => p2Hrtbox[1].DATAA
x2[1] => Add2.IN19
x2[2] => p2Hrtbox[2].DATAA
x2[2] => Add2.IN18
x2[3] => p2Hrtbox[3].DATAA
x2[3] => Add2.IN17
x2[4] => p2Hrtbox[4].DATAA
x2[4] => Add2.IN16
x2[5] => p2Hrtbox[5].DATAA
x2[5] => Add2.IN15
x2[6] => p2Hrtbox[6].DATAA
x2[6] => Add2.IN14
x2[7] => p2Hrtbox[7].DATAA
x2[7] => Add2.IN13
x2[8] => p2Hrtbox[8].DATAA
x2[8] => Add2.IN12
x2[9] => p2Hrtbox[9].DATAA
x2[9] => Add2.IN11
state1[0] => Equal0.IN3
state1[0] => Equal1.IN2
state1[0] => Equal4.IN3
state1[0] => Equal5.IN1
state1[0] => Equal8.IN2
state1[0] => Equal10.IN2
state1[0] => Equal11.IN3
state1[1] => Equal0.IN2
state1[1] => Equal1.IN1
state1[1] => Equal4.IN1
state1[1] => Equal5.IN3
state1[1] => Equal8.IN3
state1[1] => Equal10.IN1
state1[1] => Equal11.IN1
state1[2] => Equal0.IN1
state1[2] => Equal1.IN3
state1[2] => Equal4.IN0
state1[2] => Equal5.IN0
state1[2] => Equal8.IN1
state1[2] => Equal10.IN0
state1[2] => Equal11.IN2
state1[3] => Equal0.IN0
state1[3] => Equal1.IN0
state1[3] => Equal4.IN2
state1[3] => Equal5.IN2
state1[3] => Equal8.IN0
state1[3] => Equal10.IN3
state1[3] => Equal11.IN0
state2[0] => Equal2.IN3
state2[0] => Equal3.IN2
state2[0] => Equal6.IN3
state2[0] => Equal7.IN1
state2[0] => Equal9.IN2
state2[0] => Equal12.IN2
state2[0] => Equal13.IN3
state2[1] => Equal2.IN2
state2[1] => Equal3.IN1
state2[1] => Equal6.IN1
state2[1] => Equal7.IN3
state2[1] => Equal9.IN3
state2[1] => Equal12.IN1
state2[1] => Equal13.IN1
state2[2] => Equal2.IN1
state2[2] => Equal3.IN3
state2[2] => Equal6.IN0
state2[2] => Equal7.IN0
state2[2] => Equal9.IN1
state2[2] => Equal12.IN0
state2[2] => Equal13.IN2
state2[3] => Equal2.IN0
state2[3] => Equal3.IN0
state2[3] => Equal6.IN2
state2[3] => Equal7.IN2
state2[3] => Equal9.IN0
state2[3] => Equal12.IN3
state2[3] => Equal13.IN0
p1_stunmode[0] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
p1_stunmode[1] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
p2_stunmode[0] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
p2_stunmode[1] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE


|Project|GameplayControllerP2:player2
clk_60Hz => logic_clk.DATAB
key_clk => logic_clk.DATAA
switch => logic_clk.OUTPUTSELECT
reset => player_pos_x[0]~reg0.PRESET
reset => player_pos_x[1]~reg0.PRESET
reset => player_pos_x[2]~reg0.PRESET
reset => player_pos_x[3]~reg0.ACLR
reset => player_pos_x[4]~reg0.PRESET
reset => player_pos_x[5]~reg0.PRESET
reset => player_pos_x[6]~reg0.ACLR
reset => player_pos_x[7]~reg0.ACLR
reset => player_pos_x[8]~reg0.ACLR
reset => player_pos_x[9]~reg0.PRESET
reset => frame_counter[0].ACLR
reset => frame_counter[1].ACLR
reset => frame_counter[2].ACLR
reset => frame_counter[3].ACLR
reset => frame_counter[4].ACLR
reset => player_state[0]~reg0.ACLR
reset => player_state[1]~reg0.ACLR
reset => player_state[2]~reg0.ACLR
reset => player_state[3]~reg0.ACLR
in_left => always1.IN1
in_left => always1.IN0
in_left => next_player_state.OUTPUTSELECT
in_left => next_player_state.OUTPUTSELECT
in_left => next_player_state.OUTPUTSELECT
in_left => next_player_state.OUTPUTSELECT
in_left => tmp_result_x.OUTPUTSELECT
in_left => tmp_result_x.OUTPUTSELECT
in_left => tmp_result_x.OUTPUTSELECT
in_left => tmp_result_x.OUTPUTSELECT
in_left => tmp_result_x.OUTPUTSELECT
in_left => tmp_result_x.OUTPUTSELECT
in_left => tmp_result_x.OUTPUTSELECT
in_left => tmp_result_x.OUTPUTSELECT
in_left => tmp_result_x.OUTPUTSELECT
in_left => always1.IN0
in_right => next_player_state.OUTPUTSELECT
in_right => next_player_state.OUTPUTSELECT
in_right => next_player_state.OUTPUTSELECT
in_right => next_player_state.OUTPUTSELECT
in_right => tmp_result_x.OUTPUTSELECT
in_right => tmp_result_x.OUTPUTSELECT
in_right => tmp_result_x.OUTPUTSELECT
in_right => tmp_result_x.OUTPUTSELECT
in_right => tmp_result_x.OUTPUTSELECT
in_right => tmp_result_x.OUTPUTSELECT
in_right => tmp_result_x.OUTPUTSELECT
in_right => tmp_result_x.OUTPUTSELECT
in_right => tmp_result_x.OUTPUTSELECT
in_right => tmp_result_x.OUTPUTSELECT
in_right => always1.IN1
in_right => always1.IN1
in_right => always1.IN1
attack => always1.IN1
attack => always1.IN1
player1_pos_x[0] => player1_pos_x[0].IN1
player1_pos_x[1] => player1_pos_x[1].IN1
player1_pos_x[2] => player1_pos_x[2].IN1
player1_pos_x[3] => player1_pos_x[3].IN1
player1_pos_x[4] => player1_pos_x[4].IN1
player1_pos_x[5] => player1_pos_x[5].IN1
player1_pos_x[6] => player1_pos_x[6].IN1
player1_pos_x[7] => player1_pos_x[7].IN1
player1_pos_x[8] => player1_pos_x[8].IN1
player1_pos_x[9] => player1_pos_x[9].IN1
player1_state[0] => player1_state[0].IN1
player1_state[1] => player1_state[1].IN1
player1_state[2] => player1_state[2].IN1
player1_state[3] => player1_state[3].IN1
screen_left_bound[0] => Add1.IN20
screen_left_bound[1] => Add1.IN19
screen_left_bound[2] => Add1.IN18
screen_left_bound[3] => Add1.IN17
screen_left_bound[4] => Add1.IN16
screen_left_bound[5] => Add1.IN15
screen_left_bound[6] => Add1.IN14
screen_left_bound[7] => Add1.IN13
screen_left_bound[8] => Add1.IN12
screen_left_bound[9] => Add1.IN11
screen_right_bound[0] => LessThan2.IN10
screen_right_bound[1] => Add6.IN18
screen_right_bound[2] => Add6.IN17
screen_right_bound[3] => Add6.IN16
screen_right_bound[4] => Add6.IN15
screen_right_bound[5] => Add6.IN14
screen_right_bound[6] => Add5.IN8
screen_right_bound[7] => Add5.IN7
screen_right_bound[8] => Add5.IN6
screen_right_bound[9] => Add5.IN5
player_pos_x[0] <= player_pos_x[0].DB_MAX_OUTPUT_PORT_TYPE
player_pos_x[1] <= player_pos_x[1].DB_MAX_OUTPUT_PORT_TYPE
player_pos_x[2] <= player_pos_x[2].DB_MAX_OUTPUT_PORT_TYPE
player_pos_x[3] <= player_pos_x[3].DB_MAX_OUTPUT_PORT_TYPE
player_pos_x[4] <= player_pos_x[4].DB_MAX_OUTPUT_PORT_TYPE
player_pos_x[5] <= player_pos_x[5].DB_MAX_OUTPUT_PORT_TYPE
player_pos_x[6] <= player_pos_x[6].DB_MAX_OUTPUT_PORT_TYPE
player_pos_x[7] <= player_pos_x[7].DB_MAX_OUTPUT_PORT_TYPE
player_pos_x[8] <= player_pos_x[8].DB_MAX_OUTPUT_PORT_TYPE
player_pos_x[9] <= player_pos_x[9].DB_MAX_OUTPUT_PORT_TYPE
player_state[0] <= player_state[0].DB_MAX_OUTPUT_PORT_TYPE
player_state[1] <= player_state[1].DB_MAX_OUTPUT_PORT_TYPE
player_state[2] <= player_state[2].DB_MAX_OUTPUT_PORT_TYPE
player_state[3] <= player_state[3].DB_MAX_OUTPUT_PORT_TYPE
is_directional_attack <= Equal3.DB_MAX_OUTPUT_PORT_TYPE
move_flag <= move_flag.DB_MAX_OUTPUT_PORT_TYPE
attack_flag <= Equal2.DB_MAX_OUTPUT_PORT_TYPE
stunmode[0] <= HitDetection_updated:hit_detec.p2_stunmode
stunmode[1] <= HitDetection_updated:hit_detec.p2_stunmode


|Project|GameplayControllerP2:player2|HitDetection_updated:hit_detec
x1[0] => p1Hrtbox[0].DATAA
x1[0] => Add1.IN16
x1[1] => p1Hrtbox[1].DATAA
x1[1] => Add1.IN15
x1[2] => p1Hrtbox[2].DATAA
x1[2] => Add1.IN14
x1[3] => p1Hrtbox[3].DATAA
x1[3] => Add1.IN13
x1[4] => p1Hrtbox[4].DATAA
x1[4] => Add1.IN12
x1[5] => p1Hrtbox[5].DATAA
x1[5] => Add1.IN11
x1[6] => Add0.IN8
x1[7] => Add0.IN7
x1[8] => Add0.IN6
x1[9] => Add0.IN5
x2[0] => p2Hrtbox[0].DATAA
x2[0] => Add2.IN20
x2[1] => p2Hrtbox[1].DATAA
x2[1] => Add2.IN19
x2[2] => p2Hrtbox[2].DATAA
x2[2] => Add2.IN18
x2[3] => p2Hrtbox[3].DATAA
x2[3] => Add2.IN17
x2[4] => p2Hrtbox[4].DATAA
x2[4] => Add2.IN16
x2[5] => p2Hrtbox[5].DATAA
x2[5] => Add2.IN15
x2[6] => p2Hrtbox[6].DATAA
x2[6] => Add2.IN14
x2[7] => p2Hrtbox[7].DATAA
x2[7] => Add2.IN13
x2[8] => p2Hrtbox[8].DATAA
x2[8] => Add2.IN12
x2[9] => p2Hrtbox[9].DATAA
x2[9] => Add2.IN11
state1[0] => Equal0.IN3
state1[0] => Equal1.IN2
state1[0] => Equal4.IN3
state1[0] => Equal5.IN1
state1[0] => Equal8.IN2
state1[0] => Equal10.IN2
state1[0] => Equal11.IN3
state1[1] => Equal0.IN2
state1[1] => Equal1.IN1
state1[1] => Equal4.IN1
state1[1] => Equal5.IN3
state1[1] => Equal8.IN3
state1[1] => Equal10.IN1
state1[1] => Equal11.IN1
state1[2] => Equal0.IN1
state1[2] => Equal1.IN3
state1[2] => Equal4.IN0
state1[2] => Equal5.IN0
state1[2] => Equal8.IN1
state1[2] => Equal10.IN0
state1[2] => Equal11.IN2
state1[3] => Equal0.IN0
state1[3] => Equal1.IN0
state1[3] => Equal4.IN2
state1[3] => Equal5.IN2
state1[3] => Equal8.IN0
state1[3] => Equal10.IN3
state1[3] => Equal11.IN0
state2[0] => Equal2.IN3
state2[0] => Equal3.IN2
state2[0] => Equal6.IN3
state2[0] => Equal7.IN1
state2[0] => Equal9.IN2
state2[0] => Equal12.IN2
state2[0] => Equal13.IN3
state2[1] => Equal2.IN2
state2[1] => Equal3.IN1
state2[1] => Equal6.IN1
state2[1] => Equal7.IN3
state2[1] => Equal9.IN3
state2[1] => Equal12.IN1
state2[1] => Equal13.IN1
state2[2] => Equal2.IN1
state2[2] => Equal3.IN3
state2[2] => Equal6.IN0
state2[2] => Equal7.IN0
state2[2] => Equal9.IN1
state2[2] => Equal12.IN0
state2[2] => Equal13.IN2
state2[3] => Equal2.IN0
state2[3] => Equal3.IN0
state2[3] => Equal6.IN2
state2[3] => Equal7.IN2
state2[3] => Equal9.IN0
state2[3] => Equal12.IN3
state2[3] => Equal13.IN0
p1_stunmode[0] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
p1_stunmode[1] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
p2_stunmode[0] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
p2_stunmode[1] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE


|Project|Vga_Display:vga_display_inst
clk => clk.IN1
reset => v_count[0].ACLR
reset => v_count[1].ACLR
reset => v_count[2].ACLR
reset => v_count[3].ACLR
reset => v_count[4].ACLR
reset => v_count[5].ACLR
reset => v_count[6].ACLR
reset => v_count[7].ACLR
reset => v_count[8].ACLR
reset => v_count[9].ACLR
reset => h_count[0].ACLR
reset => h_count[1].ACLR
reset => h_count[2].ACLR
reset => h_count[3].ACLR
reset => h_count[4].ACLR
reset => h_count[5].ACLR
reset => h_count[6].ACLR
reset => h_count[7].ACLR
reset => h_count[8].ACLR
reset => h_count[9].ACLR
key_left => ~NO_FANOUT~
key_right => ~NO_FANOUT~
r[0] <= r_reg.DB_MAX_OUTPUT_PORT_TYPE
r[1] <= r_reg.DB_MAX_OUTPUT_PORT_TYPE
r[2] <= r_reg.DB_MAX_OUTPUT_PORT_TYPE
r[3] <= r_reg.DB_MAX_OUTPUT_PORT_TYPE
r[4] <= r_reg.DB_MAX_OUTPUT_PORT_TYPE
r[5] <= r_reg.DB_MAX_OUTPUT_PORT_TYPE
r[6] <= r_reg.DB_MAX_OUTPUT_PORT_TYPE
r[7] <= r_reg.DB_MAX_OUTPUT_PORT_TYPE
g[0] <= g_reg.DB_MAX_OUTPUT_PORT_TYPE
g[1] <= g_reg.DB_MAX_OUTPUT_PORT_TYPE
g[2] <= g_reg.DB_MAX_OUTPUT_PORT_TYPE
g[3] <= g_reg.DB_MAX_OUTPUT_PORT_TYPE
g[4] <= g_reg.DB_MAX_OUTPUT_PORT_TYPE
g[5] <= g_reg.DB_MAX_OUTPUT_PORT_TYPE
g[6] <= g_reg.DB_MAX_OUTPUT_PORT_TYPE
g[7] <= g_reg.DB_MAX_OUTPUT_PORT_TYPE
b[0] <= b_reg.DB_MAX_OUTPUT_PORT_TYPE
b[1] <= b_reg.DB_MAX_OUTPUT_PORT_TYPE
b[2] <= b_reg.DB_MAX_OUTPUT_PORT_TYPE
b[3] <= b_reg.DB_MAX_OUTPUT_PORT_TYPE
b[4] <= b_reg.DB_MAX_OUTPUT_PORT_TYPE
b[5] <= b_reg.DB_MAX_OUTPUT_PORT_TYPE
b[6] <= b_reg.DB_MAX_OUTPUT_PORT_TYPE
b[7] <= b_reg.DB_MAX_OUTPUT_PORT_TYPE
hsync <= hsync.DB_MAX_OUTPUT_PORT_TYPE
vsync <= vsync.DB_MAX_OUTPUT_PORT_TYPE
player_x[0] => LessThan7.IN14
player_x[0] => LessThan8.IN12
player_x[0] => Add3.IN22
player_x[0] => LessThan10.IN10
player_x[0] => Add4.IN20
player_x[0] => Add5.IN22
player_x[0] => LessThan13.IN12
player_x[1] => LessThan7.IN13
player_x[1] => LessThan8.IN11
player_x[1] => Add3.IN21
player_x[1] => LessThan10.IN9
player_x[1] => Add4.IN19
player_x[1] => Add5.IN21
player_x[1] => LessThan13.IN11
player_x[2] => LessThan7.IN12
player_x[2] => LessThan8.IN10
player_x[2] => Add3.IN20
player_x[2] => LessThan10.IN8
player_x[2] => Add4.IN18
player_x[2] => Add5.IN20
player_x[2] => LessThan13.IN10
player_x[3] => Add2.IN16
player_x[3] => LessThan8.IN9
player_x[3] => Add3.IN19
player_x[3] => LessThan10.IN7
player_x[3] => Add4.IN17
player_x[3] => Add5.IN19
player_x[3] => LessThan13.IN9
player_x[4] => Add2.IN15
player_x[4] => LessThan8.IN8
player_x[4] => Add3.IN18
player_x[4] => LessThan10.IN6
player_x[4] => Add4.IN16
player_x[4] => Add5.IN18
player_x[4] => LessThan13.IN8
player_x[5] => Add2.IN14
player_x[5] => LessThan8.IN7
player_x[5] => Add3.IN17
player_x[5] => LessThan10.IN5
player_x[5] => Add4.IN15
player_x[5] => Add5.IN17
player_x[5] => LessThan13.IN7
player_x[6] => LessThan10.IN4
player_x[6] => Add4.IN14
player_x[6] => Add6.IN8
player_x[7] => LessThan10.IN3
player_x[7] => Add4.IN13
player_x[7] => Add6.IN7
player_x[8] => LessThan10.IN2
player_x[8] => Add4.IN12
player_x[8] => Add6.IN6
player_x[9] => LessThan10.IN1
player_x[9] => Add4.IN11
player_x[9] => Add6.IN5
player_state[0] => Equal2.IN1
player_state[0] => Equal3.IN3
player_state[0] => Equal4.IN3
player_state[0] => Equal5.IN2
player_state[0] => Equal6.IN1
player_state[0] => Equal7.IN3
player_state[0] => Equal8.IN1
player_state[0] => Equal9.IN3
player_state[1] => Equal2.IN0
player_state[1] => Equal3.IN2
player_state[1] => Equal4.IN1
player_state[1] => Equal5.IN1
player_state[1] => Equal6.IN3
player_state[1] => Equal7.IN2
player_state[1] => Equal8.IN3
player_state[1] => Equal9.IN1
player_state[2] => Equal2.IN3
player_state[2] => Equal3.IN0
player_state[2] => Equal4.IN0
player_state[2] => Equal5.IN0
player_state[2] => Equal6.IN0
player_state[2] => Equal7.IN1
player_state[2] => Equal8.IN2
player_state[2] => Equal9.IN2
player_state[3] => Equal2.IN2
player_state[3] => Equal3.IN1
player_state[3] => Equal4.IN2
player_state[3] => Equal5.IN3
player_state[3] => Equal6.IN2
player_state[3] => Equal7.IN0
player_state[3] => Equal8.IN0
player_state[3] => Equal9.IN0
is_directional_attack => ~NO_FANOUT~
player2_x[0] => LessThan14.IN54
player2_x[0] => LessThan15.IN54
player2_x[0] => LessThan19.IN54
player2_x[0] => Add8.IN20
player2_x[0] => LessThan22.IN10
player2_x[0] => LessThan29.IN10
player2_x[0] => Add9.IN20
player2_x[0] => Add10.IN22
player2_x[0] => LessThan32.IN12
player2_x[1] => LessThan14.IN53
player2_x[1] => LessThan15.IN53
player2_x[1] => LessThan19.IN53
player2_x[1] => Add8.IN19
player2_x[1] => LessThan22.IN9
player2_x[1] => LessThan29.IN9
player2_x[1] => Add9.IN19
player2_x[1] => Add10.IN21
player2_x[1] => LessThan32.IN11
player2_x[2] => LessThan14.IN52
player2_x[2] => LessThan15.IN52
player2_x[2] => LessThan19.IN52
player2_x[2] => Add8.IN18
player2_x[2] => LessThan22.IN8
player2_x[2] => LessThan29.IN8
player2_x[2] => Add9.IN18
player2_x[2] => Add10.IN20
player2_x[2] => LessThan32.IN10
player2_x[3] => Add7.IN14
player2_x[3] => Add8.IN17
player2_x[3] => LessThan22.IN7
player2_x[3] => LessThan29.IN7
player2_x[3] => Add9.IN17
player2_x[3] => Add10.IN19
player2_x[3] => LessThan32.IN9
player2_x[4] => Add7.IN13
player2_x[4] => Add8.IN16
player2_x[4] => LessThan22.IN6
player2_x[4] => LessThan29.IN6
player2_x[4] => Add9.IN16
player2_x[4] => Add10.IN18
player2_x[4] => LessThan32.IN8
player2_x[5] => Add7.IN12
player2_x[5] => Add8.IN15
player2_x[5] => LessThan22.IN5
player2_x[5] => LessThan29.IN5
player2_x[5] => Add9.IN15
player2_x[5] => Add10.IN17
player2_x[5] => LessThan32.IN7
player2_x[6] => Add7.IN11
player2_x[6] => Add8.IN14
player2_x[6] => LessThan22.IN4
player2_x[6] => LessThan29.IN4
player2_x[6] => Add9.IN14
player2_x[6] => Add11.IN8
player2_x[7] => Add7.IN10
player2_x[7] => Add8.IN13
player2_x[7] => LessThan22.IN3
player2_x[7] => LessThan29.IN3
player2_x[7] => Add9.IN13
player2_x[7] => Add11.IN7
player2_x[8] => Add7.IN9
player2_x[8] => Add8.IN12
player2_x[8] => LessThan22.IN2
player2_x[8] => LessThan29.IN2
player2_x[8] => Add9.IN12
player2_x[8] => Add11.IN6
player2_x[9] => Add7.IN8
player2_x[9] => Add8.IN11
player2_x[9] => LessThan22.IN1
player2_x[9] => LessThan29.IN1
player2_x[9] => Add9.IN11
player2_x[9] => Add11.IN5
player2_state[0] => Equal10.IN1
player2_state[0] => Equal11.IN3
player2_state[0] => Equal12.IN3
player2_state[0] => Equal13.IN2
player2_state[0] => Equal14.IN1
player2_state[0] => Equal15.IN3
player2_state[0] => Equal16.IN1
player2_state[0] => Equal17.IN3
player2_state[1] => Equal10.IN0
player2_state[1] => Equal11.IN2
player2_state[1] => Equal12.IN1
player2_state[1] => Equal13.IN1
player2_state[1] => Equal14.IN3
player2_state[1] => Equal15.IN2
player2_state[1] => Equal16.IN3
player2_state[1] => Equal17.IN1
player2_state[2] => Equal10.IN3
player2_state[2] => Equal11.IN0
player2_state[2] => Equal12.IN0
player2_state[2] => Equal13.IN0
player2_state[2] => Equal14.IN0
player2_state[2] => Equal15.IN1
player2_state[2] => Equal16.IN2
player2_state[2] => Equal17.IN2
player2_state[3] => Equal10.IN2
player2_state[3] => Equal11.IN1
player2_state[3] => Equal12.IN2
player2_state[3] => Equal13.IN3
player2_state[3] => Equal14.IN2
player2_state[3] => Equal15.IN0
player2_state[3] => Equal16.IN0
player2_state[3] => Equal17.IN0
is_directional_attack_p2 => ~NO_FANOUT~


|Project|Vga_Display:vga_display_inst|Clock_Divider:clkdiv
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => clk_out~reg0.CLK
clk_out <= clk_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Project|hexto7seg:hexy
hexn[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
hexn[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
hexn[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
hexn[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
hexn[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
hexn[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
hexn[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
hex[0] => Decoder0.IN3
hex[1] => Decoder0.IN2
hex[2] => Decoder0.IN1
hex[3] => Decoder0.IN0


|Project|hexto7seg:hexz
hexn[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
hexn[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
hexn[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
hexn[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
hexn[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
hexn[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
hexn[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
hex[0] => Decoder0.IN3
hex[1] => Decoder0.IN2
hex[2] => Decoder0.IN1
hex[3] => Decoder0.IN0


|Project|shieldto7seg:sfsdfew
p1[0] => Decoder1.IN2
p1[1] => Decoder0.IN1
p1[1] => Decoder1.IN1
p1[2] => Decoder0.IN0
p1[2] => Decoder1.IN0
p2[0] => Decoder3.IN2
p2[1] => Decoder2.IN1
p2[1] => Decoder3.IN1
p2[2] => Decoder2.IN0
p2[2] => Decoder3.IN0
seg1[0] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
seg1[1] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg1[2] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg1[3] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
seg1[4] <= seg1.DB_MAX_OUTPUT_PORT_TYPE
seg1[5] <= Decoder1.DB_MAX_OUTPUT_PORT_TYPE
seg1[6] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
seg2[0] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg2[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seg2[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg2[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg2[4] <= seg2.DB_MAX_OUTPUT_PORT_TYPE
seg2[5] <= Decoder3.DB_MAX_OUTPUT_PORT_TYPE
seg2[6] <= Decoder2.DB_MAX_OUTPUT_PORT_TYPE


|Project|Statuses:status_bars
clk => clk.IN4
reset => le.PRESET
p1_stunmode[0] => Equal0.IN0
p1_stunmode[0] => Equal1.IN1
p1_stunmode[1] => Equal0.IN1
p1_stunmode[1] => Equal1.IN0
p2_stunmode[0] => Equal2.IN0
p2_stunmode[0] => Equal3.IN1
p2_stunmode[1] => Equal2.IN1
p2_stunmode[1] => Equal3.IN0
p1_loose_health <= Shift_Register:health_shift_p1.serial_out
p1_loose_block <= Shift_Register:block_shift_p1.serial_out
p2_loose_health <= Shift_Register:health_shift_p2.serial_out
p2_loose_block <= Shift_Register:block_shift_p2.serial_out
p1_current_health[0] <= Shift_Register:health_shift_p1.OUT
p1_current_health[1] <= Shift_Register:health_shift_p1.OUT
p1_current_health[2] <= Shift_Register:health_shift_p1.OUT
p1_current_block[0] <= Shift_Register:block_shift_p1.OUT
p1_current_block[1] <= Shift_Register:block_shift_p1.OUT
p1_current_block[2] <= Shift_Register:block_shift_p1.OUT
p2_current_health[0] <= Shift_Register:health_shift_p2.OUT
p2_current_health[1] <= Shift_Register:health_shift_p2.OUT
p2_current_health[2] <= Shift_Register:health_shift_p2.OUT
p2_current_block[0] <= Shift_Register:block_shift_p2.OUT
p2_current_block[1] <= Shift_Register:block_shift_p2.OUT
p2_current_block[2] <= Shift_Register:block_shift_p2.OUT


|Project|Statuses:status_bars|Shift_Register:health_shift_p1
serial_in => OUT.DATAB
serial_in => OUT.DATAB
parallel_in[0] => OUT.DATAB
parallel_in[1] => OUT.DATAB
parallel_in[2] => OUT.DATAB
shift_control[0] => Mux0.IN3
shift_control[0] => Mux1.IN3
shift_control[0] => Mux2.IN3
shift_control[0] => prev_shift_control[0].DATAIN
shift_control[1] => Mux0.IN2
shift_control[1] => Mux1.IN2
shift_control[1] => Mux2.IN2
shift_control[1] => prev_shift_control[1].DATAIN
load_enable => OUT.OUTPUTSELECT
load_enable => OUT.OUTPUTSELECT
load_enable => OUT.OUTPUTSELECT
clk => prev_shift_control[0].CLK
clk => prev_shift_control[1].CLK
clk => OUT[0]~reg0.CLK
clk => OUT[1]~reg0.CLK
clk => OUT[2]~reg0.CLK
OUT[0] <= OUT[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
OUT[1] <= OUT[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
OUT[2] <= OUT[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
serial_out <= OUT[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Project|Statuses:status_bars|Shift_Register:block_shift_p1
serial_in => OUT.DATAB
serial_in => OUT.DATAB
parallel_in[0] => OUT.DATAB
parallel_in[1] => OUT.DATAB
parallel_in[2] => OUT.DATAB
shift_control[0] => Mux0.IN3
shift_control[0] => Mux1.IN3
shift_control[0] => Mux2.IN3
shift_control[0] => prev_shift_control[0].DATAIN
shift_control[1] => Mux0.IN2
shift_control[1] => Mux1.IN2
shift_control[1] => Mux2.IN2
shift_control[1] => prev_shift_control[1].DATAIN
load_enable => OUT.OUTPUTSELECT
load_enable => OUT.OUTPUTSELECT
load_enable => OUT.OUTPUTSELECT
clk => prev_shift_control[0].CLK
clk => prev_shift_control[1].CLK
clk => OUT[0]~reg0.CLK
clk => OUT[1]~reg0.CLK
clk => OUT[2]~reg0.CLK
OUT[0] <= OUT[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
OUT[1] <= OUT[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
OUT[2] <= OUT[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
serial_out <= OUT[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Project|Statuses:status_bars|Shift_Register:health_shift_p2
serial_in => OUT.DATAB
serial_in => OUT.DATAB
parallel_in[0] => OUT.DATAB
parallel_in[1] => OUT.DATAB
parallel_in[2] => OUT.DATAB
shift_control[0] => Mux0.IN3
shift_control[0] => Mux1.IN3
shift_control[0] => Mux2.IN3
shift_control[0] => prev_shift_control[0].DATAIN
shift_control[1] => Mux0.IN2
shift_control[1] => Mux1.IN2
shift_control[1] => Mux2.IN2
shift_control[1] => prev_shift_control[1].DATAIN
load_enable => OUT.OUTPUTSELECT
load_enable => OUT.OUTPUTSELECT
load_enable => OUT.OUTPUTSELECT
clk => prev_shift_control[0].CLK
clk => prev_shift_control[1].CLK
clk => OUT[0]~reg0.CLK
clk => OUT[1]~reg0.CLK
clk => OUT[2]~reg0.CLK
OUT[0] <= OUT[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
OUT[1] <= OUT[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
OUT[2] <= OUT[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
serial_out <= OUT[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Project|Statuses:status_bars|Shift_Register:block_shift_p2
serial_in => OUT.DATAB
serial_in => OUT.DATAB
parallel_in[0] => OUT.DATAB
parallel_in[1] => OUT.DATAB
parallel_in[2] => OUT.DATAB
shift_control[0] => Mux0.IN3
shift_control[0] => Mux1.IN3
shift_control[0] => Mux2.IN3
shift_control[0] => prev_shift_control[0].DATAIN
shift_control[1] => Mux0.IN2
shift_control[1] => Mux1.IN2
shift_control[1] => Mux2.IN2
shift_control[1] => prev_shift_control[1].DATAIN
load_enable => OUT.OUTPUTSELECT
load_enable => OUT.OUTPUTSELECT
load_enable => OUT.OUTPUTSELECT
clk => prev_shift_control[0].CLK
clk => prev_shift_control[1].CLK
clk => OUT[0]~reg0.CLK
clk => OUT[1]~reg0.CLK
clk => OUT[2]~reg0.CLK
OUT[0] <= OUT[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
OUT[1] <= OUT[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
OUT[2] <= OUT[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
serial_out <= OUT[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE


